/*Implement a class Complex which represents the Complex Number data type. Implement the
following operations:
1. Constructor (including a default constructor which creates the complex number 0+0i).
2. Overloaded operator+ to add two complex numbers.
3. Overloaded operator* to multiply two complex numbers.*/


#include <iostream>
using namespace std;

class Complex
{
private:
    double real;
    double img;

public:
    Complex() : real(0.0), img(0.0) {} // List initialization syntax.
    Complex(double r, double i) : real(r), img(i) {} // Parameterized constructor

    Complex operator+(const Complex &other) const
    {
        return Complex(real + other.real, img + other.img); // Here we are creating the addition of two complex numbers.
    }

    Complex operator*(const Complex &other) const
    {
        return Complex((real * other.real) - (img * other.img), (real * other.img) + (img * other.real)); // Here we are performing the multiplication of two complex numbers.
    }

    void display() const
    {
        cout << real << " + " << img << "i" << endl;
    }
};

int main()
{
    Complex c1(3.0, 6.0);
    Complex c2(4.0, 7.8);

    Complex sum = c1 + c2;

    cout << "Sum: ";
    sum.display();

    Complex product = c1 * c2;
    cout << "Product: ";
    product.display();

    return 0;
}
